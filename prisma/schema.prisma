generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  accessCode  String    @unique
  balance     Int       @default(1000)
  isAdmin     Boolean   @default(false)
  bets        Bet[]
  sentTransfers     Transfer[] @relation("SentTransfers")
  receivedTransfers Transfer[] @relation("ReceivedTransfers")
  createdAt   DateTime  @default(now())
  title       String?   // Titre équipé
  animation   String?   // Animation équipée
  ownedTitles     String   @default("[]") // Titres possédés (stocké en JSON)
  ownedAnimations String   @default("[]") // Animations possédées (stocké en JSON)
  achievements Achievement[] @relation("UserAchievements")
}

model Bet {
  id          Int       @id @default(autoincrement())
  userId      Int
  betEventId  Int
  amount      Int
  choice      Boolean   // true pour OUI, false pour NON
  user        User      @relation(fields: [userId], references: [id])
  betEvent    BetEvent  @relation(fields: [betEventId], references: [id])
  createdAt   DateTime  @default(now())
}

model BetEvent {
  id          Int       @id @default(autoincrement())
  question    String
  isActive    Boolean   @default(true)
  result      Boolean?  // null si pas encore décidé
  bets        Bet[]
  createdAt   DateTime  @default(now())
}

model Transfer {
  id          Int      @id @default(autoincrement())
  amount      Int
  fromUserId  Int
  toUserId    Int
  fromUser    User     @relation("SentTransfers", fields: [fromUserId], references: [id])
  toUser      User     @relation("ReceivedTransfers", fields: [toUserId], references: [id])
  createdAt   DateTime @default(now())
}

model Achievement {
  id          String   @id
  name        String
  description String
  icon        String   // Nom de l'icône (on utilisera heroicons)
  users       User[]   @relation("UserAchievements")
  createdAt   DateTime @default(now())
} 